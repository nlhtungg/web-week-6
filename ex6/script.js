// B√†i 6 (N√¢ng cao): Hi·ªáu ·ª©ng n√¢ng cao v·ªõi JavaScript
// S·ª≠ d·ª•ng Fetch API, Filter n√¢ng cao, Animation v√† LocalStorage

// Bi·∫øn global ƒë·ªÉ l∆∞u tr·ªØ d·ªØ li·ªáu
let allProducts = [];
let filteredProducts = [];
let allAuthors = new Set();

// ƒê·ª£i DOM ƒë∆∞·ª£c t·∫£i ho√†n to√†n
document.addEventListener('DOMContentLoaded', async function() {
    console.log('üöÄ Ex6 - Hi·ªáu ·ª©ng n√¢ng cao v·ªõi JavaScript ƒë√£ t·∫£i');
    console.log('üåç URL hi·ªán t·∫°i:', window.location.href);
    console.log('üìÅ Protocol:', window.location.protocol);
    
    // Ki·ªÉm tra xem c√≥ ch·∫°y t·ª´ file:// kh√¥ng
    if (window.location.protocol === 'file:') {
        console.warn('‚ö†Ô∏è ƒêang ch·∫°y t·ª´ file://, c√≥ th·ªÉ g·∫∑p l·ªói CORS v·ªõi Fetch API');
        console.warn('üí° Khuy·∫øn ngh·ªã: S·ª≠ d·ª•ng Live Server ho·∫∑c http-server');
    }
    
    // Hi·ªÉn th·ªã loading
    showLoading('ƒêang t·∫£i d·ªØ li·ªáu s·∫£n ph·∫©m...');
    
    try {
        // T·∫£i d·ªØ li·ªáu t·ª´ JSON file v√† LocalStorage
        await initializeData();
        
        // Kh·ªüi t·∫°o giao di·ªán
        initializeUI();
        
        // Kh·ªüi t·∫°o event listeners
        initializeEventListeners();
        
        // Hi·ªÉn th·ªã s·∫£n ph·∫©m
        displayProducts(allProducts);
        
        // ·∫®n loading
        hideLoading();
        
        console.log('‚úÖ T·∫£i d·ªØ li·ªáu th√†nh c√¥ng!');
        showNotification(`‚úÖ ƒê√£ t·∫£i ${allProducts.length} s·∫£n ph·∫©m t·ª´ products.json`, 'success');
        
    } catch (error) {
        console.error('‚ùå L·ªói khi t·∫£i d·ªØ li·ªáu:', error);
        hideLoading();
        
        // Hi·ªÉn th·ªã th√¥ng b√°o l·ªói chi ti·∫øt
        let errorMessage = 'L·ªói khi t·∫£i d·ªØ li·ªáu t·ª´ products.json. ';
        if (window.location.protocol === 'file:') {
            errorMessage += 'H√£y s·ª≠ d·ª•ng Live Server ƒë·ªÉ ch·∫°y website.';
        } else {
            errorMessage += 'Ki·ªÉm tra file products.json c√≥ t·ªìn t·∫°i kh√¥ng.';
        }
        
        showNotification(errorMessage, 'error');
        
        // Fallback to localStorage ho·∫∑c d·ªØ li·ªáu m·∫∑c ƒë·ªãnh
        initializeFallbackData();
        initializeUI();
        initializeEventListeners();
        displayProducts(allProducts);
        
        showNotification(`üì¶ S·ª≠ d·ª•ng d·ªØ li·ªáu fallback: ${allProducts.length} s·∫£n ph·∫©m`, 'warning');
    }
});

/**
 * T·∫£i d·ªØ li·ªáu t·ª´ JSON file v√† k·∫øt h·ª£p v·ªõi LocalStorage
 */
async function initializeData() {
    try {
        console.log('üîÑ ƒêang t·∫£i d·ªØ li·ªáu t·ª´ products.json...');
        
        // T·∫£i d·ªØ li·ªáu t·ª´ JSON file
        const response = await fetch('./products.json');
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        
        const jsonData = await response.json();
        console.log('üì• Raw JSON data:', jsonData);
        
        // Ki·ªÉm tra c·∫•u tr√∫c JSON - c√≥ th·ªÉ l√† {products: [...]} ho·∫∑c [...]
        let jsonProducts;
        if (Array.isArray(jsonData)) {
            jsonProducts = jsonData;
        } else if (jsonData.products && Array.isArray(jsonData.products)) {
            jsonProducts = jsonData.products;
        } else {
            throw new Error('C·∫•u tr√∫c JSON kh√¥ng h·ª£p l·ªá - c·∫ßn array ho·∫∑c {products: array}');
        }
        
        console.log('‚úÖ ƒê√£ t·∫£i th√†nh c√¥ng t·ª´ JSON:', jsonProducts.length, 's·∫£n ph·∫©m');
        
        // Ki·ªÉm tra d·ªØ li·ªáu JSON c√≥ h·ª£p l·ªá kh√¥ng
        if (jsonProducts.length === 0) {
            throw new Error('D·ªØ li·ªáu JSON r·ªóng');
        }
        
        // L·∫•y d·ªØ li·ªáu t·ª´ LocalStorage (s·∫£n ph·∫©m do user th√™m)
        const storedProducts = JSON.parse(localStorage.getItem('bookstore_products') || '[]');
        console.log('üì¶ LocalStorage c√≥', storedProducts.length, 's·∫£n ph·∫©m');
        
        // ∆Øu ti√™n d·ªØ li·ªáu t·ª´ JSON, sau ƒë√≥ th√™m s·∫£n ph·∫©m t·ª´ LocalStorage
        const combinedProducts = [...jsonProducts];
        
        // Ch·ªâ th√™m s·∫£n ph·∫©m t·ª´ LocalStorage n·∫øu kh√¥ng tr√πng ID v·ªõi JSON
        storedProducts.forEach(stored => {
            const exists = combinedProducts.find(product => product.id === stored.id);
            if (!exists) {
                // ƒê·∫£m b·∫£o s·∫£n ph·∫©m t·ª´ localStorage c√≥ ƒë·∫ßy ƒë·ªß tr∆∞·ªùng c·∫ßn thi·∫øt
                const validatedProduct = {
                    id: stored.id,
                    name: stored.name || 'S·∫£n ph·∫©m kh√¥ng t√™n',
                    price: stored.price || 0,
                    category: stored.category || 'Kh√°c',
                    desc: stored.desc || 'Kh√¥ng c√≥ m√¥ t·∫£',
                    image: stored.image || `https://via.placeholder.com/200x250/cccccc/ffffff?text=${encodeURIComponent(stored.name || 'No+Name')}`,
                    author: stored.author || 'Kh√¥ng r√µ',
                    pages: stored.pages || 0,
                    rating: stored.rating || 0
                };
                combinedProducts.push(validatedProduct);
            }
        });
        
        allProducts = combinedProducts;
        filteredProducts = [...allProducts];
        
        // T·∫°o danh s√°ch t√°c gi·∫£ t·ª´ t·∫•t c·∫£ s·∫£n ph·∫©m
        allAuthors.clear();
        allProducts.forEach(product => {
            if (product.author && product.author !== 'Kh√¥ng r√µ') {
                allAuthors.add(product.author);
            }
        });
        
        console.log('üéØ T·ªïng s·ªë s·∫£n ph·∫©m:', allProducts.length);
        console.log('üë• S·ªë t√°c gi·∫£:', allAuthors.size, '- Danh s√°ch:', Array.from(allAuthors));
        
        return true;
        
    } catch (error) {
        console.error('‚ùå L·ªói khi t·∫£i d·ªØ li·ªáu t·ª´ JSON:', error);
        throw error;
    }
}

/**
 * Kh·ªüi t·∫°o d·ªØ li·ªáu fallback khi kh√¥ng t·∫£i ƒë∆∞·ª£c JSON
 */
function initializeFallbackData() {
    console.log('‚ö†Ô∏è Chuy·ªÉn sang ch·∫ø ƒë·ªô fallback - kh√¥ng t·∫£i ƒë∆∞·ª£c products.json');
    
    const storedProducts = JSON.parse(localStorage.getItem('bookstore_products') || '[]');
    
    if (storedProducts.length > 0) {
        console.log('üì¶ S·ª≠ d·ª•ng d·ªØ li·ªáu t·ª´ LocalStorage:', storedProducts.length, 's·∫£n ph·∫©m');
        allProducts = storedProducts;
    } else {
        console.log('üîß S·ª≠ d·ª•ng d·ªØ li·ªáu m·∫∑c ƒë·ªãnh');
        // D·ªØ li·ªáu m·∫∑c ƒë·ªãnh khi kh√¥ng c√≥ g√¨
        allProducts = [
            {
                id: 1,
                name: "ƒê·∫Øc Nh√¢n T√¢m",
                price: 120000,
                category: "K·ªπ nƒÉng s·ªëng",
                desc: "Cu·ªën s√°ch kinh ƒëi·ªÉn v·ªÅ ngh·ªá thu·∫≠t giao ti·∫øp v√† ·ª©ng x·ª≠",
                image: "https://via.placeholder.com/200x250/3498db/ffffff?text=ƒê·∫Øc+Nh√¢n+T√¢m",
                author: "Dale Carnegie",
                pages: 320,
                rating: 4.8
            },
            {
                id: 2,
                name: "Sapiens",
                price: 180000,
                category: "Khoa h·ªçc",
                desc: "L∆∞·ª£c s·ª≠ lo√†i ng∆∞·ªùi t·ª´ th·ªùi nguy√™n th·ªßy ƒë·∫øn hi·ªán ƒë·∫°i",
                image: "https://via.placeholder.com/200x250/e74c3c/ffffff?text=Sapiens",
                author: "Yuval Noah Harari",
                pages: 512,
                rating: 4.6
            },
            {
                id: 3,
                name: "Atomic Habits",
                price: 150000,
                category: "K·ªπ nƒÉng s·ªëng",
                desc: "H∆∞·ªõng d·∫´n x√¢y d·ª±ng th√≥i quen t·ªët v√† lo·∫°i b·ªè th√≥i quen x·∫•u",
                image: "https://via.placeholder.com/200x250/2ecc71/ffffff?text=Atomic+Habits",
                author: "James Clear",
                pages: 320,
                rating: 4.7
            }
        ];
    }
    
    filteredProducts = [...allProducts];
    
    // T·∫°o danh s√°ch t√°c gi·∫£
    allAuthors.clear();
    allProducts.forEach(product => {
        if (product.author && product.author !== 'Kh√¥ng r√µ') {
            allAuthors.add(product.author);
        }
    });
    
    console.log('‚úÖ Fallback data ready:', allProducts.length, 's·∫£n ph·∫©m');
}

/**
 * Kh·ªüi t·∫°o giao di·ªán
 */
function initializeUI() {
    // Populate author filter
    populateAuthorFilter();
    
    // Update results count
    updateResultsCount();
}

/**
 * ƒêi·ªÅn danh s√°ch t√°c gi·∫£ v√†o dropdown
 */
function populateAuthorFilter() {
    const authorFilter = document.getElementById('authorFilter');
    if (!authorFilter) return;
    
    // X√≥a c√°c option c≈© (gi·ªØ l·∫°i option "T·∫•t c·∫£ t√°c gi·∫£")
    while (authorFilter.children.length > 1) {
        authorFilter.removeChild(authorFilter.lastChild);
    }
    
    // Th√™m c√°c t√°c gi·∫£
    Array.from(allAuthors).sort().forEach(author => {
        const option = document.createElement('option');
        option.value = author;
        option.textContent = author;
        authorFilter.appendChild(option);
    });
}

/**
 * Kh·ªüi t·∫°o t·∫•t c·∫£ event listeners
 */
function initializeEventListeners() {
    // T√¨m ki·∫øm c∆° b·∫£n
    const searchInput = document.getElementById('searchInput');
    const searchBtn = document.getElementById('searchBtn');
    const clearSearchBtn = document.getElementById('clearSearchBtn');
    
    if (searchBtn) searchBtn.addEventListener('click', handleSearch);
    if (clearSearchBtn) clearSearchBtn.addEventListener('click', clearSearch);
    if (searchInput) {
        searchInput.addEventListener('keyup', function(e) {
            if (e.key === 'Enter') {
                handleSearch();
            }
        });
    }
    
    // B·ªô l·ªçc n√¢ng cao
    const categoryFilter = document.getElementById('categoryFilter');
    const authorFilter = document.getElementById('authorFilter');
    const ratingFilter = document.getElementById('ratingFilter');
    const applyPriceFilter = document.getElementById('applyPriceFilter');
    const resetFilters = document.getElementById('resetFilters');
    
    if (categoryFilter) categoryFilter.addEventListener('change', applyFilters);
    if (authorFilter) authorFilter.addEventListener('change', applyFilters);
    if (ratingFilter) ratingFilter.addEventListener('change', applyFilters);
    if (applyPriceFilter) applyPriceFilter.addEventListener('click', applyPriceFilters);
    if (resetFilters) resetFilters.addEventListener('click', resetAllFilters);
    
    // S·∫Øp x·∫øp
    const sortSelect = document.getElementById('sortSelect');
    if (sortSelect) sortSelect.addEventListener('change', handleSort);
    
    // Form th√™m s·∫£n ph·∫©m
    const addProductBtn = document.getElementById('addProductBtn');
    const modalOverlay = document.getElementById('modal-overlay');
    const addProductForm = document.getElementById('addProductForm');
    const cancelBtn = document.getElementById('cancelBtn');
    const closeModalBtn = document.getElementById('closeModalBtn');
    
    if (addProductBtn) addProductBtn.addEventListener('click', showModal);
    if (cancelBtn) cancelBtn.addEventListener('click', hideModal);
    if (closeModalBtn) closeModalBtn.addEventListener('click', hideModal);
    if (modalOverlay) {
        modalOverlay.addEventListener('click', function(e) {
            if (e.target === modalOverlay) {
                hideModal();
            }
        });
    }
    if (addProductForm) addProductForm.addEventListener('submit', handleAddProduct);
    
    // Form li√™n h·ªá
    const contactForm = document.getElementById('contactForm');
    if (contactForm) contactForm.addEventListener('submit', handleContactForm);
}

/**
 * X·ª≠ l√Ω t√¨m ki·∫øm c∆° b·∫£n
 */
function handleSearch() {
    const searchInput = document.getElementById('searchInput');
    if (!searchInput) return;
    
    const searchTerm = searchInput.value.toLowerCase().trim();
    
    if (searchTerm === '') {
        showNotification('Vui l√≤ng nh·∫≠p t·ª´ kh√≥a t√¨m ki·∫øm', 'warning');
        searchInput.classList.add('animate-shake');
        setTimeout(() => searchInput.classList.remove('animate-shake'), 500);
        return;
    }
    
    // L·ªçc s·∫£n ph·∫©m theo t·ª´ kh√≥a
    filteredProducts = allProducts.filter(product => 
        product.name.toLowerCase().includes(searchTerm) ||
        product.desc.toLowerCase().includes(searchTerm) ||
        (product.author && product.author.toLowerCase().includes(searchTerm)) ||
        product.category.toLowerCase().includes(searchTerm)
    );
    
    displayProducts(filteredProducts);
    updateResultsCount();
    
    showNotification(`T√¨m th·∫•y ${filteredProducts.length} k·∫øt qu·∫£ cho "${searchTerm}"`, 'success');
}

/**
 * X√≥a t√¨m ki·∫øm
 */
function clearSearch() {
    const searchInput = document.getElementById('searchInput');
    if (searchInput) {
        searchInput.value = '';
        searchInput.focus();
    }
    
    // Reset v·ªÅ t·∫•t c·∫£ s·∫£n ph·∫©m nh∆∞ng gi·ªØ b·ªô l·ªçc kh√°c
    applyFilters();
    showNotification('ƒê√£ x√≥a t·ª´ kh√≥a t√¨m ki·∫øm', 'info');
}

/**
 * √Åp d·ª•ng c√°c b·ªô l·ªçc
 */
function applyFilters() {
    const searchTerm = document.getElementById('searchInput')?.value.toLowerCase().trim() || '';
    const categoryFilter = document.getElementById('categoryFilter')?.value || '';
    const authorFilter = document.getElementById('authorFilter')?.value || '';
    const ratingFilter = document.getElementById('ratingFilter')?.value || '';
    
    filteredProducts = allProducts.filter(product => {
        // T√¨m ki·∫øm theo t·ª´ kh√≥a
        const matchesSearch = !searchTerm || 
            product.name.toLowerCase().includes(searchTerm) ||
            product.desc.toLowerCase().includes(searchTerm) ||
            (product.author && product.author.toLowerCase().includes(searchTerm)) ||
            product.category.toLowerCase().includes(searchTerm);
        
        // L·ªçc theo th·ªÉ lo·∫°i
        const matchesCategory = !categoryFilter || product.category === categoryFilter;
        
        // L·ªçc theo t√°c gi·∫£
        const matchesAuthor = !authorFilter || product.author === authorFilter;
        
        // L·ªçc theo ƒë√°nh gi√°
        const matchesRating = !ratingFilter || (product.rating >= parseFloat(ratingFilter));
        
        return matchesSearch && matchesCategory && matchesAuthor && matchesRating;
    });
    
    displayProducts(filteredProducts);
    updateResultsCount();
}

/**
 * √Åp d·ª•ng b·ªô l·ªçc gi√°
 */
function applyPriceFilters() {
    const minPrice = parseFloat(document.getElementById('minPrice')?.value) || 0;
    const maxPrice = parseFloat(document.getElementById('maxPrice')?.value) || Infinity;
    
    if (minPrice > maxPrice && maxPrice !== Infinity) {
        showNotification('Gi√° t·ªëi thi·ªÉu kh√¥ng th·ªÉ l·ªõn h∆°n gi√° t·ªëi ƒëa', 'error');
        return;
    }
    
    // √Åp d·ª•ng b·ªô l·ªçc hi·ªán t·∫°i tr∆∞·ªõc, sau ƒë√≥ l·ªçc theo gi√°
    applyFilters();
    
    filteredProducts = filteredProducts.filter(product => 
        product.price >= minPrice && product.price <= maxPrice
    );
    
    displayProducts(filteredProducts);
    updateResultsCount();
    
    const priceText = maxPrice === Infinity ? 
        `t·ª´ ${minPrice.toLocaleString('vi-VN')}ƒë` :
        `t·ª´ ${minPrice.toLocaleString('vi-VN')}ƒë ƒë·∫øn ${maxPrice.toLocaleString('vi-VN')}ƒë`;
    
    showNotification(`ƒê√£ l·ªçc theo gi√° ${priceText}`, 'success');
}

/**
 * Reset t·∫•t c·∫£ b·ªô l·ªçc
 */
function resetAllFilters() {
    // Reset form controls
    document.getElementById('searchInput').value = '';
    document.getElementById('categoryFilter').value = '';
    document.getElementById('authorFilter').value = '';
    document.getElementById('ratingFilter').value = '';
    document.getElementById('minPrice').value = '';
    document.getElementById('maxPrice').value = '';
    document.getElementById('sortSelect').value = 'name-asc';
    
    // Reset data
    filteredProducts = [...allProducts];
    displayProducts(filteredProducts);
    updateResultsCount();
    
    showNotification('ƒê√£ ƒë·∫∑t l·∫°i t·∫•t c·∫£ b·ªô l·ªçc', 'info');
}

/**
 * X·ª≠ l√Ω s·∫Øp x·∫øp
 */
function handleSort() {
    const sortValue = document.getElementById('sortSelect')?.value || 'name-asc';
    const [field, direction] = sortValue.split('-');
    
    filteredProducts.sort((a, b) => {
        let valueA, valueB;
        
        switch (field) {
            case 'name':
                valueA = a.name.toLowerCase();
                valueB = b.name.toLowerCase();
                break;
            case 'price':
                valueA = a.price;
                valueB = b.price;
                break;
            case 'rating':
                valueA = a.rating || 0;
                valueB = b.rating || 0;
                break;
            default:
                valueA = a.name.toLowerCase();
                valueB = b.name.toLowerCase();
        }
        
        if (direction === 'asc') {
            return valueA > valueB ? 1 : -1;
        } else {
            return valueA < valueB ? 1 : -1;
        }
    });
    
    displayProducts(filteredProducts);
    showNotification(`ƒê√£ s·∫Øp x·∫øp theo ${getSortLabel(sortValue)}`, 'info');
}

/**
 * L·∫•y label cho sorting
 */
function getSortLabel(sortValue) {
    const labels = {
        'name-asc': 't√™n A-Z',
        'name-desc': 't√™n Z-A',
        'price-asc': 'gi√° th·∫•p ƒë·∫øn cao',
        'price-desc': 'gi√° cao ƒë·∫øn th·∫•p',
        'rating-desc': 'ƒë√°nh gi√° cao nh·∫•t',
        'rating-asc': 'ƒë√°nh gi√° th·∫•p nh·∫•t'
    };
    return labels[sortValue] || 'm·∫∑c ƒë·ªãnh';
}

/**
 * Hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m v·ªõi animation
 */
function displayProducts(products) {
    const productList = document.getElementById('product-list');
    if (!productList) return;
    
    // Fade out current products
    productList.style.opacity = '0';
    
    setTimeout(() => {
        productList.innerHTML = '';
        
        if (products.length === 0) {
            productList.innerHTML = `
                <div class="no-results">
                    <h3>üòî Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m n√†o</h3>
                    <p>Th·ª≠ thay ƒë·ªïi b·ªô l·ªçc ho·∫∑c t·ª´ kh√≥a t√¨m ki·∫øm</p>
                    <button onclick="resetAllFilters()" class="btn btn-primary">ƒê·∫∑t l·∫°i b·ªô l·ªçc</button>
                </div>
            `;
        } else {
            products.forEach((product, index) => {
                const productCard = createProductCard(product);
                productCard.style.animationDelay = `${index * 100}ms`;
                productCard.classList.add('adding');
                productList.appendChild(productCard);
            });
        }
        
        // Fade in new products
        productList.style.opacity = '1';
    }, 200);
}

/**
 * T·∫°o product card v·ªõi th√¥ng tin chi ti·∫øt
 */
function createProductCard(product) {
    const card = document.createElement('div');
    card.className = 'product-card';
    card.setAttribute('data-id', product.id);
    
    // T·∫°o rating stars
    const stars = '‚≠ê'.repeat(Math.floor(product.rating || 0)) + 
                  (product.rating % 1 >= 0.5 ? '‚≠ê' : '') +
                  '‚òÜ'.repeat(5 - Math.ceil(product.rating || 0));
    
    card.innerHTML = `
        <div class="product-image">
            <img src="${product.image}" alt="${product.name}" onerror="this.src='https://via.placeholder.com/200x250/cccccc/ffffff?text=No+Image'">
            <div class="product-actions">
                <button class="btn-delete" onclick="deleteProduct(${product.id})" title="X√≥a s·∫£n ph·∫©m">
                    üóëÔ∏è
                </button>
            </div>
        </div>
        <div class="product-info">
            <h3 class="product-name">${product.name}</h3>
            <p class="product-author">T√°c gi·∫£: ${product.author || 'Kh√¥ng r√µ'}</p>
            <p class="product-category">Th·ªÉ lo·∫°i: ${product.category}</p>
            <p class="product-pages">S·ªë trang: ${product.pages || 'Kh√¥ng r√µ'}</p>
            <div class="product-rating">
                <span class="stars">${stars}</span>
                <span class="rating-text">(${product.rating || 0}/5)</span>
            </div>
            <p class="product-price">${product.price.toLocaleString('vi-VN')} VNƒê</p>
            <p class="product-desc">${product.desc}</p>
        </div>
    `;
    
    return card;
}

/**
 * X√≥a s·∫£n ph·∫©m v·ªõi animation
 */
function deleteProduct(productId) {
    if (!confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a s·∫£n ph·∫©m n√†y?')) {
        return;
    }
    
    const productCard = document.querySelector(`[data-id="${productId}"]`);
    if (productCard) {
        productCard.classList.add('removing');
        
        setTimeout(() => {
            // X√≥a kh·ªèi arrays
            allProducts = allProducts.filter(p => p.id !== productId);
            filteredProducts = filteredProducts.filter(p => p.id !== productId);
            
            // C·∫≠p nh·∫≠t localStorage
            saveProductsToStorage();
            
            // Refresh display
            displayProducts(filteredProducts);
            updateResultsCount();
            
            showNotification('ƒê√£ x√≥a s·∫£n ph·∫©m th√†nh c√¥ng', 'success');
        }, 300);
    }
}

/**
 * Hi·ªÉn th·ªã modal th√™m s·∫£n ph·∫©m v·ªõi animation
 */
function showModal() {
    const modal = document.getElementById('modal-overlay');
    const modalContent = modal.querySelector('.modal-content');
    
    modal.classList.remove('hidden');
    modal.style.display = 'flex';
    
    // Animation
    setTimeout(() => {
        modal.style.opacity = '1';
        modalContent.style.transform = 'scale(1) translateY(0)';
    }, 10);
    
    // Focus v√†o input ƒë·∫ßu ti√™n
    setTimeout(() => {
        document.getElementById('newName')?.focus();
    }, 200);
}

/**
 * ·∫®n modal v·ªõi animation
 */
function hideModal() {
    const modal = document.getElementById('modal-overlay');
    const modalContent = modal.querySelector('.modal-content');
    const form = document.getElementById('addProductForm');
    
    // Animation
    modal.style.opacity = '0';
    modalContent.style.transform = 'scale(0.8) translateY(-50px)';
    
    setTimeout(() => {
        modal.style.display = 'none';
        modal.classList.add('hidden');
        
        // Reset form
        if (form) form.reset();
        clearFormErrors();
    }, 300);
}

/**
 * X·ª≠ l√Ω th√™m s·∫£n ph·∫©m m·ªõi
 */
function handleAddProduct(e) {
    e.preventDefault();
    
    const formData = new FormData(e.target);
    const newProduct = {
        id: Date.now(), // Unique ID
        name: formData.get('newName').trim(),
        price: parseInt(formData.get('newPrice')),
        category: formData.get('newCategory').trim(),
        desc: formData.get('newDesc').trim(),
        image: formData.get('newImage').trim() || `https://via.placeholder.com/200x250/3498db/ffffff?text=${encodeURIComponent(formData.get('newName').trim())}`,
        author: formData.get('newAuthor')?.trim() || 'Kh√¥ng r√µ',
        pages: parseInt(formData.get('newPages')) || 0,
        rating: parseFloat(formData.get('newRating')) || 0
    };
    
    // Validate
    if (!validateProduct(newProduct)) {
        return;
    }
    
    // Th√™m v√†o arrays
    allProducts.push(newProduct);
    filteredProducts = [...allProducts]; // Reset filter khi th√™m m·ªõi
    
    // Th√™m t√°c gi·∫£ m·ªõi v√†o Set
    if (newProduct.author && newProduct.author !== 'Kh√¥ng r√µ') {
        allAuthors.add(newProduct.author);
        populateAuthorFilter();
    }
    
    // L∆∞u v√†o localStorage
    saveProductsToStorage();
    
    // Hi·ªÉn th·ªã l·∫°i s·∫£n ph·∫©m
    displayProducts(filteredProducts);
    updateResultsCount();
    
    // ·∫®n modal
    hideModal();
    
    // Th√¥ng b√°o th√†nh c√¥ng
    showNotification('ƒê√£ th√™m s·∫£n ph·∫©m th√†nh c√¥ng!', 'success');
    
    // Scroll ƒë·∫øn s·∫£n ph·∫©m m·ªõi
    setTimeout(() => {
        const newCard = document.querySelector(`[data-id="${newProduct.id}"]`);
        if (newCard) {
            newCard.scrollIntoView({ behavior: 'smooth', block: 'center' });
            newCard.classList.add('animate-pulse');
        }
    }, 500);
}

/**
 * Validate s·∫£n ph·∫©m m·ªõi
 */
function validateProduct(product) {
    const errors = [];
    
    if (!product.name || product.name.length < 2) {
        errors.push('T√™n s·∫£n ph·∫©m ph·∫£i c√≥ √≠t nh·∫•t 2 k√Ω t·ª±');
    }
    
    if (!product.price || product.price < 1000) {
        errors.push('Gi√° s·∫£n ph·∫©m ph·∫£i l·ªõn h∆°n 1000 VNƒê');
    }
    
    if (!product.category || product.category.length < 2) {
        errors.push('Th·ªÉ lo·∫°i ph·∫£i c√≥ √≠t nh·∫•t 2 k√Ω t·ª±');
    }
    
    if (!product.desc || product.desc.length < 10) {
        errors.push('M√¥ t·∫£ ph·∫£i c√≥ √≠t nh·∫•t 10 k√Ω t·ª±');
    }
    
    if (product.rating < 0 || product.rating > 5) {
        errors.push('ƒê√°nh gi√° ph·∫£i t·ª´ 0 ƒë·∫øn 5');
    }
    
    if (errors.length > 0) {
        showFormErrors(errors);
        return false;
    }
    
    clearFormErrors();
    return true;
}

/**
 * Hi·ªÉn th·ªã l·ªói form
 */
function showFormErrors(errors) {
    const errorContainer = document.getElementById('form-errors') || createErrorContainer();
    errorContainer.innerHTML = `
        <h4>Vui l√≤ng s·ª≠a c√°c l·ªói sau:</h4>
        <ul>
            ${errors.map(error => `<li>${error}</li>`).join('')}
        </ul>
    `;
    errorContainer.style.display = 'block';
    errorContainer.classList.add('animate-shake');
    
    setTimeout(() => {
        errorContainer.classList.remove('animate-shake');
    }, 500);
}

/**
 * T·∫°o container hi·ªÉn th·ªã l·ªói
 */
function createErrorContainer() {
    const container = document.createElement('div');
    container.id = 'form-errors';
    container.className = 'form-errors';
    container.style.display = 'none';
    
    const modalBody = document.querySelector('.modal-body');
    if (modalBody) {
        modalBody.insertBefore(container, modalBody.firstChild);
    }
    
    return container;
}

/**
 * X√≥a l·ªói form
 */
function clearFormErrors() {
    const errorContainer = document.getElementById('form-errors');
    if (errorContainer) {
        errorContainer.style.display = 'none';
    }
}

/**
 * X·ª≠ l√Ω form li√™n h·ªá
 */
function handleContactForm(e) {
    e.preventDefault();
    
    const formData = new FormData(e.target);
    const contactData = {
        name: formData.get('name'),
        email: formData.get('email'),
        message: formData.get('message')
    };
    
    console.log('D·ªØ li·ªáu li√™n h·ªá:', contactData);
    
    // Simulate sending
    showLoading('ƒêang g·ª≠i tin nh·∫Øn...');
    
    setTimeout(() => {
        hideLoading();
        showNotification('C·∫£m ∆°n b·∫°n ƒë√£ li√™n h·ªá! Ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi s·ªõm nh·∫•t c√≥ th·ªÉ.', 'success');
        e.target.reset();
    }, 1500);
}

/**
 * L∆∞u s·∫£n ph·∫©m v√†o localStorage
 */
function saveProductsToStorage() {
    try {
        localStorage.setItem('bookstore_products', JSON.stringify(allProducts));
        console.log('ƒê√£ l∆∞u d·ªØ li·ªáu v√†o localStorage');
    } catch (error) {
        console.error('L·ªói khi l∆∞u v√†o localStorage:', error);
    }
}

/**
 * C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng k·∫øt qu·∫£
 */
function updateResultsCount() {
    const resultsCount = document.getElementById('resultsCount');
    if (resultsCount) {
        const total = allProducts.length;
        const current = filteredProducts.length;
        
        if (current === total) {
            resultsCount.textContent = `Hi·ªÉn th·ªã t·∫•t c·∫£ ${total} s·∫£n ph·∫©m`;
        } else {
            resultsCount.textContent = `Hi·ªÉn th·ªã ${current} / ${total} s·∫£n ph·∫©m`;
        }
    }
}

/**
 * Hi·ªÉn th·ªã loading
 */
function showLoading(message = 'ƒêang t·∫£i...') {
    const existingLoader = document.getElementById('global-loader');
    if (existingLoader) {
        existingLoader.remove();
    }
    
    const loader = document.createElement('div');
    loader.id = 'global-loader';
    loader.className = 'global-loader';
    loader.innerHTML = `
        <div class="loader-content">
            <div class="loading-spinner"></div>
            <p>${message}</p>
        </div>
    `;
    
    document.body.appendChild(loader);
}

/**
 * ·∫®n loading
 */
function hideLoading() {
    const loader = document.getElementById('global-loader');
    if (loader) {
        loader.style.opacity = '0';
        setTimeout(() => loader.remove(), 300);
    }
}

/**
 * Hi·ªÉn th·ªã th√¥ng b√°o
 */
function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.innerHTML = `
        <span>${message}</span>
        <button onclick="this.parentElement.remove()">&times;</button>
    `;
    
    document.body.appendChild(notification);
    
    // Animation
    setTimeout(() => notification.classList.add('show'), 100);
    
    // Auto hide
    setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => notification.remove(), 300);
    }, 4000);
}
// ƒê·ª£i DOM ƒë∆∞·ª£c t·∫£i ho√†n to√†n
document.addEventListener('DOMContentLoaded', function() {
    console.log('Ex5 - L∆∞u tr·ªØ d·ªØ li·ªáu s·∫£n ph·∫©m v·ªõi LocalStorage ƒë√£ t·∫£i');
    
    // L·∫•y c√°c ph·∫ßn t·ª≠ DOM c·∫ßn thi·∫øt
    const searchInput = document.getElementById('searchInput');
    const searchBtn = document.getElementById('searchBtn');
    const addProductBtn = document.getElementById('addProductBtn');
    const modalOverlay = document.getElementById('modal-overlay');
    const addProductForm = document.getElementById('addProductForm');
    const cancelBtn = document.getElementById('cancelBtn');
    const closeModalBtn = document.getElementById('closeModalBtn');
    const productList = document.getElementById('product-list');
    
    // Kh·ªüi t·∫°o LocalStorage v√† t·∫£i d·ªØ li·ªáu s·∫£n ph·∫©m
    initializeLocalStorage();
    loadProductsFromStorage();
    
    // Kh·ªüi t·∫°o event listeners
    initializeEventListeners();
    
    /**
     * Kh·ªüi t·∫°o t·∫•t c·∫£ event listeners
     */
    function initializeEventListeners() {
        // Event listeners cho t√¨m ki·∫øm
        searchBtn.addEventListener('click', handleSearch);
        searchInput.addEventListener('keyup', function(e) {
            if (e.key === 'Enter') {
                handleSearch();
            }
        });
        
        // Event listeners cho form th√™m s·∫£n ph·∫©m
        addProductBtn.addEventListener('click', showModal);
        cancelBtn.addEventListener('click', hideModal);
        closeModalBtn.addEventListener('click', hideModal);
        modalOverlay.addEventListener('click', function(e) {
            // ƒê√≥ng modal khi click v√†o overlay (kh√¥ng ph·∫£i modal content)
            if (e.target === modalOverlay) {
                hideModal();
            }
        });
        addProductForm.addEventListener('submit', handleAddProduct);
        
        // Event listener cho form li√™n h·ªá
        const contactForm = document.getElementById('contactForm');
        if (contactForm) {
            contactForm.addEventListener('submit', handleContactForm);
        }
        
        // ƒê√≥ng modal khi nh·∫•n ESC
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && !modalOverlay.classList.contains('hidden')) {
                hideModal();
            }
        });
    }
    
    /**
     * Kh·ªüi t·∫°o LocalStorage v·ªõi d·ªØ li·ªáu m·∫´u n·∫øu ch∆∞a c√≥
     */
    function initializeLocalStorage() {
        // Ki·ªÉm tra n·∫øu ch∆∞a c√≥ d·ªØ li·ªáu s·∫£n ph·∫©m trong localStorage
        if (!localStorage.getItem('products')) {
            console.log('Kh·ªüi t·∫°o localStorage v·ªõi s·∫£n ph·∫©m m·∫´u');
            
            // T·∫°o d·ªØ li·ªáu s·∫£n ph·∫©m m·∫´u ban ƒë·∫ßu
            const defaultProducts = [
                {
                    name: 'Thinking, Fast and Slow',
                    price: 156000,
                    desc: 'T√°c ph·∫©m c·ªßa Daniel Kahneman v·ªÅ c√°ch n√£o b·ªô ho·∫°t ƒë·ªông v√† ƒë∆∞a ra quy·∫øt ƒë·ªãnh. M·ªôt cu·ªën s√°ch m·ªü mang t·∫ßm nh√¨n v·ªÅ t√¢m l√Ω h·ªçc v√† kinh t·∫ø h√†nh vi.',
                    image: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=200&h=300&fit=crop&crop=face'
                },
                {
                    name: 'The Lean Startup',
                    price: 145000,
                    desc: 'Eric Ries h∆∞·ªõng d·∫´n c√°ch x√¢y d·ª±ng startup th√†nh c√¥ng th√¥ng qua ph∆∞∆°ng ph√°p "h·ªçc nhanh, th·∫•t b·∫°i nhanh". Cu·ªën s√°ch c·∫ßn thi·∫øt cho c√°c entrepreneur tr·∫ª.',
                    image: 'https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?w=200&h=300&fit=crop'
                },
                {
                    name: 'Code Complete',
                    price: 198000,
                    desc: 'Steve McConnell tr√¨nh b√†y ngh·ªá thu·∫≠t vi·∫øt code chuy√™n nghi·ªáp. Cu·ªën s√°ch kinh ƒëi·ªÉn cho m·ªçi l·∫≠p tr√¨nh vi√™n mu·ªën n√¢ng cao k·ªπ nƒÉng.',
                    image: 'https://images.unsplash.com/photo-1515879218367-8466d910aaa4?w=200&h=300&fit=crop'
                }
            ];
            
            // L∆∞u v√†o localStorage
            localStorage.setItem('products', JSON.stringify(defaultProducts));
        }
    }
    
    /**
     * T·∫£i d·ªØ li·ªáu s·∫£n ph·∫©m t·ª´ localStorage v√† hi·ªÉn th·ªã
     */
    function loadProductsFromStorage() {
        try {
            const productsData = localStorage.getItem('products');
            if (productsData) {
                const products = JSON.parse(productsData);
                console.log('T·∫£i s·∫£n ph·∫©m t·ª´ localStorage:', products.length, 's·∫£n ph·∫©m');
                
                // X√≥a s·∫£n ph·∫©m m·∫´u c√≥ s·∫µn trong HTML
                productList.innerHTML = '';
                
                // T·∫°o l·∫°i giao di·ªán cho t·ª´ng s·∫£n ph·∫©m
                products.forEach(function(product) {
                    const productElement = createProductElementFromData(product);
                    productList.appendChild(productElement);
                });
                
                console.log('ƒê√£ t·∫£i th√†nh c√¥ng', products.length, 's·∫£n ph·∫©m t·ª´ localStorage');
            }
        } catch (error) {
            console.error('L·ªói khi t·∫£i d·ªØ li·ªáu t·ª´ localStorage:', error);
            // N·∫øu c√≥ l·ªói, kh·ªüi t·∫°o l·∫°i v·ªõi d·ªØ li·ªáu m·∫∑c ƒë·ªãnh
            localStorage.removeItem('products');
            initializeLocalStorage();
            loadProductsFromStorage();
        }
    }
    
    /**
     * L∆∞u danh s√°ch s·∫£n ph·∫©m hi·ªán t·∫°i v√†o localStorage
     */
    function saveProductsToStorage() {
        try {
            const productItems = document.querySelectorAll('.product-item');
            const products = [];
            
            productItems.forEach(function(item) {
                const name = item.querySelector('.product-name').textContent;
                const priceText = item.querySelector('.product-price').textContent;
                const desc = item.querySelector('.product-description').textContent;
                const img = item.querySelector('img');
                
                // Tr√≠ch xu·∫•t gi√° t·ª´ text (lo·∫°i b·ªè "Gi√°: " v√† c√°c k√Ω t·ª± kh√¥ng ph·∫£i s·ªë)
                const priceNumbers = priceText.replace(/[^\d]/g, '');
                const price = parseFloat(priceNumbers) || 0;
                
                products.push({
                    name: name,
                    price: price,
                    desc: desc,
                    image: img ? img.src : ''
                });
            });
            
            localStorage.setItem('products', JSON.stringify(products));
            console.log('ƒê√£ l∆∞u', products.length, 's·∫£n ph·∫©m v√†o localStorage');
        } catch (error) {
            console.error('L·ªói khi l∆∞u d·ªØ li·ªáu v√†o localStorage:', error);
        }
    }
    
    /**
     * T·∫°o element s·∫£n ph·∫©m t·ª´ d·ªØ li·ªáu (d√πng cho localStorage)
     */
    function createProductElementFromData(productData) {
        const article = document.createElement('article');
        article.className = 'product-item';
        
        const defaultImage = 'https://images.unsplash.com/photo-1481627834876-b7833e8f5570?w=200&h=300&fit=crop';
        const finalImageUrl = productData.image || defaultImage;
        
        article.innerHTML = `
            <img src="${escapeHtml(finalImageUrl)}" alt="${escapeHtml(productData.name)}" onerror="this.src='${defaultImage}'">
            <h3 class="product-name">${escapeHtml(productData.name)}</h3>
            <p class="product-description">${escapeHtml(productData.desc)}</p>
            <p class="product-price">Gi√°: ${formatPrice(productData.price)}</p>
        `;
        
        return article;
    }
    
    /**
     * X√≥a d·ªØ li·ªáu localStorage (d√†nh cho debug)
     * G·ªçi clearLocalStorage() trong console ƒë·ªÉ reset d·ªØ li·ªáu
     */
    function clearLocalStorage() {
        localStorage.removeItem('products');
        console.log('ƒê√£ x√≥a d·ªØ li·ªáu s·∫£n ph·∫©m kh·ªèi localStorage');
        location.reload(); // T·∫£i l·∫°i trang ƒë·ªÉ hi·ªÉn th·ªã d·ªØ li·ªáu m·∫∑c ƒë·ªãnh
    }
    
    // Xu·∫•t h√†m ra global scope ƒë·ªÉ c√≥ th·ªÉ g·ªçi t·ª´ console
    window.clearLocalStorage = clearLocalStorage;
    
    /**
     * X·ª≠ l√Ω ch·ª©c nƒÉng t√¨m ki·∫øm s·∫£n ph·∫©m (c·∫≠p nh·∫≠t cho b√†i 4)
     */
    function handleSearch() {
        const searchTerm = searchInput.value.toLowerCase().trim();
        const productItems = document.querySelectorAll('.product-item'); // L·∫•y l·∫°i m·ªói l·∫ßn ƒë·ªÉ bao g·ªìm s·∫£n ph·∫©m m·ªõi
        let visibleCount = 0;
        
        console.log('=== B·∫ÆT ƒê·∫¶U T√åM KI·∫æM ===');
        console.log('T·ª´ kh√≥a t√¨m ki·∫øm:', searchTerm);
        console.log('T·ªïng s·ªë s·∫£n ph·∫©m:', productItems.length);
        
        productItems.forEach(function(item, index) {
            const productName = item.querySelector('.product-name');
            
            if (productName) {
                const nameText = productName.textContent.toLowerCase();
                
                // Ki·ªÉm tra t√™n s·∫£n ph·∫©m c√≥ ch·ª©a t·ª´ kh√≥a t√¨m ki·∫øm kh√¥ng
                const isMatch = nameText.includes(searchTerm) || searchTerm === '';
                
                if (isMatch) {
                    // Hi·ªÉn th·ªã s·∫£n ph·∫©m
                    item.style.display = '';
                    visibleCount++;
                    console.log(`‚úÖ S·∫£n ph·∫©m ${index + 1}: "${productName.textContent}" - HI·ªÇN TH·ªä`);
                } else {
                    // ·∫®n s·∫£n ph·∫©m
                    item.style.display = 'none';
                    console.log(`‚ùå S·∫£n ph·∫©m ${index + 1}: "${productName.textContent}" - ·∫®N`);
                }
            } else {
                console.log(`‚ö†Ô∏è S·∫£n ph·∫©m ${index + 1}: Kh√¥ng t√¨m th·∫•y t√™n s·∫£n ph·∫©m`);
            }
        });
        
        console.log('S·ªë s·∫£n ph·∫©m hi·ªÉn th·ªã:', visibleCount);
        console.log('=== K·∫æT TH√öC T√åM KI·∫æM ===');
        
        // Hi·ªÉn th·ªã th√¥ng b√°o k·∫øt qu·∫£ t√¨m ki·∫øm
        showSearchResult(searchTerm);
    }
    
    /**
     * Hi·ªÉn th·ªã th√¥ng b√°o k·∫øt qu·∫£ t√¨m ki·∫øm
     */
    function showSearchResult(searchTerm) {
        // X√≥a th√¥ng b√°o c≈© n·∫øu c√≥
        const existingMessage = document.getElementById('search-result-message');
        if (existingMessage) {
            existingMessage.remove();
        }
        
        if (searchTerm !== '') {
            // ƒê·∫øm s·ªë s·∫£n ph·∫©m hi·ªÉn th·ªã - ch·ªâ ƒë·∫øm nh·ªØng s·∫£n ph·∫©m KH√îNG c√≥ style="display: none"
            const allProducts = document.querySelectorAll('.product-item');
            let visibleCount = 0;
            
            allProducts.forEach(function(product) {
                // Ki·ªÉm tra xem s·∫£n ph·∫©m c√≥ b·ªã ·∫©n kh√¥ng
                if (product.style.display !== 'none') {
                    visibleCount++;
                }
            });
            
            // T·∫°o th√¥ng b√°o
            const message = document.createElement('p');
            message.id = 'search-result-message';
            message.style.textAlign = 'center';
            message.style.margin = '1rem 0';
            message.style.fontStyle = 'italic';
            message.style.fontSize = '1.1rem';
            message.style.fontWeight = '500';
            
            if (visibleCount > 0) {
                message.textContent = `T√¨m th·∫•y ${visibleCount} s·∫£n ph·∫©m cho t·ª´ kh√≥a "${searchTerm}"`;
                message.style.color = '#27ae60';
                message.style.background = '#e8f5e8';
                message.style.padding = '0.8rem';
                message.style.borderRadius = '8px';
                message.style.border = '1px solid #27ae60';
            } else {
                message.textContent = `Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m n√†o cho t·ª´ kh√≥a "${searchTerm}"`;
                message.style.color = '#e74c3c';
                message.style.background = '#ffeaea';
                message.style.padding = '0.8rem';
                message.style.borderRadius = '8px';
                message.style.border = '1px solid #e74c3c';
            }
            
            // Ch√®n th√¥ng b√°o v√†o tr∆∞·ªõc danh s√°ch s·∫£n ph·∫©m
            const productsSection = document.getElementById('products');
            const productListDiv = document.getElementById('product-list');
            productsSection.insertBefore(message, productListDiv);
            
            console.log(`T√¨m ki·∫øm "${searchTerm}": ${visibleCount} s·∫£n ph·∫©m hi·ªÉn th·ªã`);
        }
    }
    
    /**
     * Hi·ªÉn th·ªã modal th√™m s·∫£n ph·∫©m
     */
    function showModal() {
        console.log('Hi·ªÉn th·ªã modal th√™m s·∫£n ph·∫©m');
        
        // Hi·ªÉn th·ªã modal
        modalOverlay.classList.remove('hidden');
        
        // Focus v√†o tr∆∞·ªùng ƒë·∫ßu ti√™n
        const firstInput = addProductForm.querySelector('input');
        if (firstInput) {
            setTimeout(() => firstInput.focus(), 100);
        }
        
        // Prevent body scroll
        document.body.style.overflow = 'hidden';
    }
    
    /**
     * ·∫®n modal th√™m s·∫£n ph·∫©m
     */
    function hideModal() {
        console.log('·∫®n modal th√™m s·∫£n ph·∫©m');
        
        // ·∫®n modal
        modalOverlay.classList.add('hidden');
        
        // Reset form
        addProductForm.reset();
        
        // Restore body scroll
        document.body.style.overflow = '';
    }
    
    /**
     * X·ª≠ l√Ω th√™m s·∫£n ph·∫©m m·ªõi
     */
    function handleAddProduct(e) {
        e.preventDefault(); // NgƒÉn form submit m·∫∑c ƒë·ªãnh
        
        console.log('X·ª≠ l√Ω th√™m s·∫£n ph·∫©m m·ªõi');
        
        // L·∫•y gi√° tr·ªã t·ª´ c√°c tr∆∞·ªùng input (theo y√™u c·∫ßu b√†i 4)
        const name = document.getElementById('newName').value.trim();
        const price = document.getElementById('newPrice').value.trim();
        const desc = document.getElementById('newDesc').value.trim();
        const imageUrl = document.getElementById('newImage').value.trim();
        
        // Th·ª±c hi·ªán ki·ªÉm tra h·ª£p l·ªá (theo y√™u c·∫ßu b√†i 4)
        const errorMsg = document.getElementById('errorMsg');
        
        // Validation: T√™n s·∫£n ph·∫©m kh√¥ng ƒë∆∞·ª£c r·ªóng
        if (name === '') {
            showErrorMessage('T√™n s·∫£n ph·∫©m kh√¥ng ƒë∆∞·ª£c r·ªóng');
            return;
        }
        
        // Validation: Gi√° ph·∫£i l√† s·ªë h·ª£p l·ªá v√† l·ªõn h∆°n 0
        if (price === '' || isNaN(price) || Number(price) <= 0) {
            showErrorMessage('Gi√° ph·∫£i l√† s·ªë h·ª£p l·ªá v√† l·ªõn h∆°n 0');
            return;
        }
        
        // Validation tu·ª≥ ch·ªçn: M√¥ t·∫£ kh√¥ng qu√° ng·∫Øn
        if (desc.length < 10) {
            showErrorMessage('M√¥ t·∫£ ph·∫£i c√≥ √≠t nh·∫•t 10 k√Ω t·ª±');
            return;
        }
        
        // Ki·ªÉm tra tr√πng t√™n s·∫£n ph·∫©m
        if (isProductNameExists(name)) {
            showErrorMessage('T√™n s·∫£n ph·∫©m ƒë√£ t·ªìn t·∫°i. Vui l√≤ng ch·ªçn t√™n kh√°c');
            return;
        }
        
        // N·∫øu t·∫•t c·∫£ h·ª£p l·ªá, x√≥a th√¥ng b√°o l·ªói
        if (errorMsg) {
            errorMsg.style.display = 'none';
        }
        
        // T·∫°o ph·∫ßn t·ª≠ s·∫£n ph·∫©m m·ªõi (theo y√™u c·∫ßu b√†i 4)
        const newItem = createProductElement(name, Number(price), desc, imageUrl);
        
        // Ch√®n s·∫£n ph·∫©m m·ªõi v√†o danh s√°ch (th√™m v√†o ƒë·∫ßu theo y√™u c·∫ßu b√†i 4)
        if (productList.firstChild) {
            productList.insertBefore(newItem, productList.firstChild); // th√™m v√†o ƒë·∫ßu danh s√°ch
        } else {
            productList.appendChild(newItem);
        }
        
        // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
        alert(`ƒê√£ th√™m s·∫£n ph·∫©m "${name}" th√†nh c√¥ng!`);
        
        // L∆∞u danh s√°ch s·∫£n ph·∫©m v√†o localStorage (theo y√™u c·∫ßu b√†i 5)
        saveProductsToStorage();
        
        // ƒê√≥ng form v√† reset (theo y√™u c·∫ßu b√†i 4)
        addProductForm.reset(); // ƒê·∫∑t l·∫°i gi√° tr·ªã form
        hideModal(); // ·∫®n form ƒëi
        
        console.log('Th√™m s·∫£n ph·∫©m th√†nh c√¥ng:', name, '- ƒê√£ l∆∞u v√†o localStorage');
    }
    
    /**
     * T·∫°o ph·∫ßn t·ª≠ HTML cho s·∫£n ph·∫©m m·ªõi
     */
    function createProductElement(name, price, description, imageUrl) {
        // T·∫°o article element
        const article = document.createElement('article');
        article.className = 'product-item';
        
        // T·∫°o n·ªôi dung HTML
        let imageElement = '';
        if (imageUrl) {
            imageElement = `<img src="${imageUrl}" alt="${name}" onerror="this.src='https://via.placeholder.com/200x300/cccccc/ffffff?text=No+Image'">`;
        } else {
            imageElement = `<img src="https://via.placeholder.com/200x300/cccccc/ffffff?text=No+Image" alt="${name}">`;
        }
        
        article.innerHTML = `
            ${imageElement}
            <h3 class="product-name">${escapeHtml(name)}</h3>
            <p class="product-description">${escapeHtml(description)}</p>
            <p class="product-price"><strong>Gi√°: ${formatPrice(price)}‚Ç´</strong></p>
        `;
        
        // Th√™m hi·ªáu ·ª©ng highlight cho s·∫£n ph·∫©m m·ªõi
        article.style.border = '2px solid #27ae60';
        article.style.backgroundColor = '#f0fff4';
        
        // Lo·∫°i b·ªè highlight sau 3 gi√¢y
        setTimeout(() => {
            article.style.border = '1px solid #ccc';
            article.style.backgroundColor = '#fafafa';
        }, 3000);
        
        return article;
    }
    
    /**
     * Escape HTML ƒë·ªÉ tr√°nh XSS
     */
    function escapeHtml(unsafe) {
        return unsafe
            .replace(/&/g, "&amp;")
            .replace(/</g, "&lt;")
            .replace(/>/g, "&gt;")
            .replace(/"/g, "&quot;")
            .replace(/'/g, "&#039;");
    }
    
    /**
     * Format gi√° ti·ªÅn v·ªõi d·∫•u ph√¢n c√°ch
     */
    function formatPrice(price) {
        return Number(price).toLocaleString('vi-VN');
    }
    
    /**
     * Ki·ªÉm tra t√™n s·∫£n ph·∫©m ƒë√£ t·ªìn t·∫°i
     */
    function isProductNameExists(name) {
        const existingProducts = document.querySelectorAll('.product-name');
        return Array.from(existingProducts).some(function(product) {
            return product.textContent.toLowerCase() === name.toLowerCase();
        });
    }
    
    /**
     * Hi·ªÉn th·ªã th√¥ng b√°o l·ªói
     */
    function showErrorMessage(message) {
        const errorMsg = document.getElementById('errorMsg');
        if (errorMsg) {
            errorMsg.textContent = message;
            errorMsg.style.display = 'block';
        } else {
            alert(message);
        }
        
        // ·∫®n th√¥ng b√°o th√†nh c√¥ng n·∫øu c√≥
        const successMsg = document.getElementById('successMsg');
        if (successMsg) {
            successMsg.style.display = 'none';
        }
    }
    
    /**
     * X·ª≠ l√Ω form li√™n h·ªá
     */
    function handleContactForm(event) {
        event.preventDefault();
        
        const name = document.getElementById('name').value.trim();
        const email = document.getElementById('email').value.trim();
        const message = document.getElementById('message').value.trim();
        
        if (name && email && message) {
            alert(`C·∫£m ∆°n ${name}! Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c tin nh·∫Øn c·ªßa b·∫°n v√† s·∫Ω ph·∫£n h·ªìi qua email ${email} trong th·ªùi gian s·ªõm nh·∫•t.`);
            const contactForm = document.getElementById('contactForm');
            if (contactForm) {
                contactForm.reset();
            }
        }
    }
    
    // Th√™m smooth scrolling cho navigation
    document.querySelectorAll('nav a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth'
                });
            }
        });
    });
    
    console.log('JavaScript ƒë√£ ƒë∆∞·ª£c t·∫£i v√† kh·ªüi t·∫°o th√†nh c√¥ng cho b√†i 5 - LocalStorage!');
});